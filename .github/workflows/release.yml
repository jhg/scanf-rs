name: Release

on:
  push:
    branches: [main]
    paths-ignore:
      - "docs/**"
      - "doc/**"
      - ".vscode/**"
      - ".gitignore"
      - "**/*.md"
      - "*.code-workspace"
      - ".github/**"
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: "0"
  RUSTFLAGS: "-D warnings"

jobs:
  version_check:
    runs-on: ubuntu-latest
    outputs:
      releaseVersion: ${{steps.version_check.outputs.releaseVersion}}
      versionChanged: ${{steps.version_check.outputs.versionChanged}}
    steps:
      - uses: actions/checkout@v2
      - run: git fetch --all --tags
      - name: Check Release Version
        uses: thebongy/version-check@v1
        id: version_check
        with:
          failBuild: false
          file: Cargo.toml
          tagFormat: v${version}
  version_check_proc_macro:
    runs-on: ubuntu-latest
    outputs:
      releaseVersion: ${{steps.version_check_proc_macro.outputs.releaseVersion}}
      versionChanged: ${{steps.version_check_proc_macro.outputs.versionChanged}}
    steps:
      - uses: actions/checkout@v2
      - run: git fetch --all --tags
      - name: Check Release Version of scanf-proc-macro
        uses: thebongy/version-check@v1
        id: version_check_proc_macro
        with:
          failBuild: false
          file: scanf-proc-macro/Cargo.toml
          tagFormat: v${version}

  audit:
    uses: jhg/scanf-rs/.github/workflows/audit.yml@main

  tests:
    uses: jhg/scanf-rs/.github/workflows/tests.yml@main

  publish:
    runs-on: ubuntu-latest
    needs: [audit, tests, version_check]
    if: ${{needs.version_check.outputs.versionChanged == 'true'}}
    env:
      CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v1
      - name: Publish to crates.io
        run: cargo publish --verbose
      - name: Release & tag
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "${{needs.version_check.outputs.releaseVersion}}"
          target_commitish: "${{github.ref_name}}"
  publish_proc_macro:
    runs-on: ubuntu-latest
    needs: [audit, tests, version_check_proc_macro]
    if: ${{needs.version_check_proc_macro.outputs.versionChanged == 'true'}}
    env:
      CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v1
      - name: Publish to crates.io
        working-directory: scanf-proc-macro
        run: cargo publish --verbose
